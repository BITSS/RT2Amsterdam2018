1/17
install.packages(c('tinytex', 'rmarkdown'))
tinytex::install_tinytex()
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
tinytex::install_tinytex(force = TRUE)
install.packages(c("backports", "BH", "bindr", "bindrcpp", "blogdown", "bookdown", "broom", "callr", "circlize", "cobalt", "curl", "data.table", "DBI", "dbplyr", "devtools", "DiagrammeR", "forcats", "gender", "GlobalOptions", "glue", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmlwidgets", "httpuv", "igraph", "irlba", "knitr", "lazyeval", "lfe", "lme4", "lubridate", "openssl", "packrat", "plogr", "psych", "pwr", "Rcpp", "RcppEigen", "RCurl", "reprex", "reshape2", "rio", "rlang", "rprojroot", "rsconnect", "selectr", "servr", "shape", "stargazer", "stringi", "stringr", "survey", "tibble", "tidyr", "tidyselect", "viridis", "viridisLite", "withr", "XML", "yaml", "zoo"))
install.packages(c("boot", "cluster", "MASS", "Matrix", "mgcv", "nlme", "rpart"), lib="/usr/local/Cellar/r/3.4.1_2/lib/R/library")
download.file(http://rmarkdown.rstudio.com/images/RMarkdownFlow.png)
download.file("http://rmarkdown.rstudio.com/images/RMarkdownFlow.png")
download.file("http://rmarkdown.rstudio.com/images/RMarkdownFlow.png", destfile = RMarkdownFlow.png)
download.file("http://rmarkdown.rstudio.com/images/RMarkdownFlow.png", destfile = "RMarkdownFlow.png")
getwd()
download.file("http://rmarkdown.rstudio.com/images/RMarkdownOutputFormats.png", destfile = "RMarkdownOutputFormats.png")
getwd()
ls
ls()
dir
dir()
cd 3-dynamicdocs
cd "3-dynamicdocs"
birthdays = matrix(round(runif(n.pers * n.sims,
1, 365)),
nrow = n.sims, ncol = n.pers)
n.pers = 43
n.sims = 2
birthdays = matrix(round(runif(n.pers * n.sims,
1, 365)),
nrow = n.sims, ncol = n.pers)
birthdays
View(birthdays)
unique.birthdays = apply(birthdays, 1, function(x) length(unique(x)) )
birthdays = matrix(round(runif(n.pers * n.sims,
1, 365)),
nrow = n.sims, ncol = n.pers)
birthdays
unique.birthdays = apply(birthdays, 1, function(x) length(unique(x)) )
unique.birthdays
mean(unique.birthdays==n.pers)
birthday.prob = function(n.pers, n.sims) {
# simulate birthdays
birthdays = matrix(round(runif(n.pers * n.sims,
1, 365)),
nrow = n.sims, ncol = n.pers)
# for each room (row) get unique birthdays
unique.birthdays = apply(birthdays, 1, function(x) length(unique(x)) )
# Indicator with 1 if all are unique birthdays
all.different = 1 * (unique.birthdays==n.pers)
# Compute average time all have different birthdays
result = 1 - mean(all.different)
return(result)
}
n.pers.param = 27
n.sims.param = 1e4
birthday.prob(n.pers.param,n.sims.param)
birthday.prob(n.pers.param,n.sims.param)
birthday.prob(10.param,n.sims.param)
birthday.prob(10,n.sims.param)
birthday.prob(10,1e4)
birthday.prob(10,1e5)
birthday.prob(10,1e6)
birthday.prob(10,1e7)
35/.2
